{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["tmp_6", 32, false],
        ["tmp_7", 32, false],
        ["tmp_8", 32, false],
        ["tmp_9", 12, false],
        ["tmp_10", 48, false],
        ["tmp_11", 48, false],
        ["tmp_12", 48, false],
        ["tmp_13", 32, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["tmp_16", 32, false],
        ["tmp_17", 32, false],
        ["tmp_18", 32, false],
        ["tmp_19", 32, false],
        ["tmp_20", 32, false],
        ["tmp_21", 32, false],
        ["tmp_22", 32, false],
        ["tmp_23", 32, false],
        ["tmp_24", 32, false],
        ["tmp_25", 32, false],
        ["tmp_26", 32, false],
        ["tmp_27", 16, false],
        ["tmp_28", 12, false],
        ["tmp_29", 9, false],
        ["tmp_30", 1, false],
        ["tmp_31", 3, false],
        ["tmp_32", 2, false],
        ["tmp_33", 16, false],
        ["tmp_34", 32, false],
        ["tmp_35", 32, false],
        ["tmp_36", 32, false],
        ["tmp_37", 32, false],
        ["tmp_38", 32, false],
        ["tmp_39", 32, false],
        ["psfp_c_streamGate_c_last_interval", 12, false],
        ["psfp_c_streamGate_c_remaining", 32, false],
        ["metadata_t._ingress_md_stream_filter_stream_handle0", 16, false],
        ["metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame1", 1, false],
        ["metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame_enable2", 1, false],
        ["metadata_t._ingress_md_stream_filter_active_stream_identification3", 1, false],
        ["metadata_t._ingress_md_stream_filter_stream_gate_id4", 12, false],
        ["metadata_t._ingress_md_stream_filter_flow_meter_instance_id5", 16, false],
        ["metadata_t._ingress_md_stream_gate_ipv6", 4, false],
        ["metadata_t._ingress_md_stream_gate_PSFPGateEnabled7", 1, false],
        ["metadata_t._ingress_md_stream_gate_max_octects_interval8", 32, false],
        ["metadata_t._ingress_md_stream_gate_initial_sdu9", 32, false],
        ["metadata_t._ingress_md_stream_gate_reset_octets10", 1, false],
        ["metadata_t._ingress_md_stream_gate_remaining_octets11", 32, false],
        ["metadata_t._ingress_md_stream_gate_interval_identifier12", 12, false],
        ["metadata_t._ingress_md_stream_gate_gate_closed_due_to_invalid_rx_enable13", 1, false],
        ["metadata_t._ingress_md_stream_gate_gate_closed_due_to_octets_exceeded_enable14", 1, false],
        ["metadata_t._ingress_md_stream_gate_gate_closed15", 1, false],
        ["metadata_t._ingress_md_flow_meter_color16", 2, false],
        ["metadata_t._ingress_md_flow_meter_drop_on_yellow17", 1, false],
        ["metadata_t._ingress_md_flow_meter_meter_blocked18", 1, false],
        ["metadata_t._ingress_md_flow_meter_mark_all_frames_red_enable19", 1, false],
        ["metadata_t._ingress_md_flow_meter_color_aware20", 1, false],
        ["metadata_t._ingress_md_flow_meter_pre_color21", 2, false],
        ["metadata_t._ingress_md_diff_ts22", 64, false],
        ["metadata_t._ingress_md_to_be_dropped23", 1, false],
        ["metadata_t._egress_md_difference_max_to_hyperperiod24", 64, false],
        ["metadata_t._egress_md_rel_ts_plus_offset25", 64, false],
        ["metadata_t._egress_md_hyperperiod_duration26", 64, false],
        ["metadata_t._egress_md_new_rel_pos_with_offset27", 64, false],
        ["metadata_t._egress_md_offset28", 64, false],
        ["metadata_t._egress_md_hyperperiod_minus_offset29", 64, false],
        ["metadata_t._hyperperiod_hyperperiod_ts30", 48, false],
        ["metadata_t._hyperperiod_pkt_count_hyperperiod31", 16, false],
        ["metadata_t._hyperperiod_pkt_count_register32", 16, false],
        ["metadata_t._last_hyperperiod33", 48, false],
        ["metadata_t._period_count34", 32, false],
        ["metadata_t._ingress_ts35", 48, false],
        ["metadata_t._hyperperiod_ts36", 64, false],
        ["metadata_t._delta37", 64, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dst_addr", 48, false],
        ["src_addr", 48, false],
        ["ether_type", 16, false]
      ]
    },
    {
      "name" : "eth_802_1q_t",
      "id" : 3,
      "fields" : [
        ["pcp", 3, false],
        ["dei", 1, false],
        ["vid", 12, false],
        ["ether_type", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 6, false],
        ["ecn", 2, false],
        ["total_len", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["frag_offset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdr_checksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "transport_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "eth_802_1q",
      "id" : 3,
      "header_type" : "eth_802_1q_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "transport",
      "id" : 5,
      "header_type" : "transport_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x8100",
              "mask" : null,
              "next_state" : "parse_802_1q"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ether_type"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_transport"
            },
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_transport"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_transport",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "transport"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_802_1q",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "eth_802_1q"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["eth_802_1q", "ether_type"]
            }
          ]
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "src/parser.p4",
        "line" : 54,
        "column" : 8,
        "source_fragment" : "DeparserImpl"
      },
      "order" : ["ethernet", "eth_802_1q", "ipv4", "transport"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.flow_meter",
      "id" : 0,
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 7,
        "column" : 42,
        "source_fragment" : "flow_meter"
      },
      "is_direct" : true,
      "rate_count" : 2,
      "type" : "bytes",
      "size" : 5,
      "binding" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_instance",
      "result_target" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
    }
  ],
  "counter_arrays" : [
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.stream_id_counter",
      "id" : 0,
      "is_direct" : true,
      "binding" : "IngressImpl.psfp_c.streamFilter_c.stream_id",
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 9,
        "column" : 50,
        "source_fragment" : "stream_id_counter"
      }
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.stream_id_overwrite_counter",
      "id" : 1,
      "is_direct" : true,
      "binding" : "IngressImpl.psfp_c.streamFilter_c.stream_id_active",
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 13,
        "column" : 50,
        "source_fragment" : "stream_id_overwrite_counter"
      }
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.stream_filter_counter",
      "id" : 2,
      "is_direct" : true,
      "binding" : "IngressImpl.psfp_c.streamFilter_c.stream_filter_instance",
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 17,
        "column" : 50,
        "source_fragment" : "stream_filter_counter"
      }
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.max_sdu_filter_counter",
      "id" : 3,
      "is_direct" : true,
      "binding" : "IngressImpl.psfp_c.streamFilter_c.max_sdu_filter",
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 22,
        "column" : 50,
        "source_fragment" : "max_sdu_filter_counter"
      }
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.missed_max_sdu_filter_counter",
      "id" : 4,
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 25,
        "column" : 53,
        "source_fragment" : "missed_max_sdu_filter_counter"
      },
      "size" : 5,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.overall_counter",
      "id" : 5,
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 30,
        "column" : 63,
        "source_fragment" : "overall_counter"
      },
      "size" : 5,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.stream_gate_counter",
      "id" : 6,
      "is_direct" : true,
      "binding" : "IngressImpl.psfp_c.streamGate_c.stream_gate_instance",
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 8,
        "column" : 50,
        "source_fragment" : "stream_gate_counter"
      }
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.not_passed_gate_counter",
      "id" : 7,
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 11,
        "column" : 53,
        "source_fragment" : "not_passed_gate_counter"
      },
      "size" : 5,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.missed_interval_counter",
      "id" : 8,
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 15,
        "column" : 53,
        "source_fragment" : "missed_interval_counter"
      },
      "size" : 5,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.marked_red_counter",
      "id" : 9,
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 10,
        "column" : 64,
        "source_fragment" : "marked_red_counter"
      },
      "size" : 2,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.marked_yellow_counter",
      "id" : 10,
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 14,
        "column" : 64,
        "source_fragment" : "marked_yellow_counter"
      },
      "size" : 2,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.marked_green_counter",
      "id" : 11,
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 17,
        "column" : 64,
        "source_fragment" : "marked_green_counter"
      },
      "size" : 2,
      "is_direct" : false
    },
    {
      "name" : "IngressImpl.ipv4_c.debug_counter",
      "id" : 12,
      "is_direct" : true,
      "binding" : "IngressImpl.ipv4_c.ipv4",
      "source_info" : {
        "filename" : "src/controls/IPv4.p4",
        "line" : 7,
        "column" : 40,
        "source_fragment" : "debug_counter"
      }
    }
  ],
  "register_arrays" : [
    {
      "name" : "IngressImpl.psfp_c.hyperperiod_duration_reg",
      "id" : 0,
      "source_info" : {
        "filename" : "src/controls/PSFP.p4",
        "line" : 13,
        "column" : 42,
        "source_fragment" : "hyperperiod_duration_reg"
      },
      "size" : 5,
      "bitwidth" : 48
    },
    {
      "name" : "IngressImpl.psfp_c.last_hyperperiod_reg",
      "id" : 1,
      "source_info" : {
        "filename" : "src/controls/PSFP.p4",
        "line" : 17,
        "column" : 42,
        "source_fragment" : "last_hyperperiod_reg"
      },
      "size" : 5,
      "bitwidth" : 48
    },
    {
      "name" : "IngressImpl.psfp_c.hyperperiod_done_reg",
      "id" : 2,
      "source_info" : {
        "filename" : "src/controls/PSFP.p4",
        "line" : 22,
        "column" : 41,
        "source_fragment" : "hyperperiod_done_reg"
      },
      "size" : 5,
      "bitwidth" : 1
    },
    {
      "name" : "IngressImpl.psfp_c.period_count",
      "id" : 3,
      "source_info" : {
        "filename" : "src/controls/PSFP.p4",
        "line" : 27,
        "column" : 42,
        "source_fragment" : "period_count"
      },
      "size" : 5,
      "bitwidth" : 32
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.reg_filter_blocked",
      "id" : 4,
      "source_info" : {
        "filename" : "src/controls/StreamFilter.p4",
        "line" : 33,
        "column" : 41,
        "source_fragment" : "reg_filter_blocked"
      },
      "size" : 5,
      "bitwidth" : 1
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.reg_gate_blocked",
      "id" : 5,
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 19,
        "column" : 43,
        "source_fragment" : "reg_gate_blocked"
      },
      "size" : 4,
      "bitwidth" : 1
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.octets_per_interval",
      "id" : 6,
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 23,
        "column" : 27,
        "source_fragment" : "octets_per_interval"
      },
      "size" : 256,
      "bitwidth" : 32
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.state_reset_octets",
      "id" : 7,
      "source_info" : {
        "filename" : "src/controls/StreamGate.p4",
        "line" : 27,
        "column" : 44,
        "source_fragment" : "state_reset_octets"
      },
      "size" : 4,
      "bitwidth" : 12
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.reg_meter_blocked",
      "id" : 8,
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 19,
        "column" : 42,
        "source_fragment" : "reg_meter_blocked"
      },
      "size" : 2,
      "bitwidth" : 1
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "source_info" : {
        "filename" : "src/checksum.p4",
        "line" : 15,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "total_len"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "frag_offset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [
    {
      "id" : 1,
      "name" : "digest_finished_hyperperiod_t",
      "source_info" : {
        "filename" : "src/controls/PSFP.p4",
        "line" : 106,
        "column" : 63,
        "source_fragment" : "{ // receiver=0 pour CP ..."
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        }
      ]
    },
    {
      "id" : 2,
      "name" : "digest_block_t",
      "source_info" : {
        "filename" : "src/controls/FlowMeter.p4",
        "line" : 106,
        "column" : 20,
        "source_fragment" : "{ ..."
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_27"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_28"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_29"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_30"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_31"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_32"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_33"]
        }
      ]
    }
  ],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "IngressImpl.psfp_c.set_hyperperiod_state",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "gate_id",
          "bitwidth" : 32
        },
        {
          "name" : "hyperperiod_ts",
          "bitwidth" : 48
        },
        {
          "name" : "last_hyperperiod",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.hyperperiod_duration_reg"
            },
            {
              "type" : "runtime_data",
              "value" : 0
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 54,
            "column" : 8,
            "source_fragment" : "hyperperiod_duration_reg.write(gate_id, hyperperiod_ts)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.last_hyperperiod_reg"
            },
            {
              "type" : "runtime_data",
              "value" : 0
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 56,
            "column" : 8,
            "source_fragment" : "last_hyperperiod_reg.write(gate_id, last_hyperperiod)"
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.overwrite_stream_active",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "eth_dst_addr",
          "bitwidth" : 48
        },
        {
          "name" : "vid",
          "bitwidth" : 12
        },
        {
          "name" : "pcp",
          "bitwidth" : 3
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 37,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dst_addr = eth_dst_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["eth_802_1q", "vid"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "hdr.eth_802_1q.vid = vid"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["eth_802_1q", "pcp"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 39,
            "column" : 8,
            "source_fragment" : "hdr.eth_802_1q.pcp = pcp"
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.assign_stream_handle",
      "id" : 10,
      "runtime_data" : [
        {
          "name" : "stream_handle",
          "bitwidth" : 16
        },
        {
          "name" : "active",
          "bitwidth" : 1
        },
        {
          "name" : "stream_blocked_due_to_oversize_frame_enable",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 51,
            "column" : 52,
            "source_fragment" : "= stream_handle; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_active_stream_identification3"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 52,
            "column" : 67,
            "source_fragment" : "= active; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame_enable2"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 53,
            "column" : 82,
            "source_fragment" : "= stream_blocked_due_to_oversize_frame_enable; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.assign_gate_and_meter",
      "id" : 11,
      "runtime_data" : [
        {
          "name" : "stream_gate_id",
          "bitwidth" : 12
        },
        {
          "name" : "flow_meter_instance_id",
          "bitwidth" : 16
        },
        {
          "name" : "gate_closed_due_to_invalid_rx_enable",
          "bitwidth" : 1
        },
        {
          "name" : "gate_closed_due_to_octets_exceeded_enable",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 63,
            "column" : 53,
            "source_fragment" : "= stream_gate_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 64,
            "column" : 61,
            "source_fragment" : "= flow_meter_instance_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed_due_to_invalid_rx_enable13"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 66,
            "column" : 73,
            "source_fragment" : "= gate_closed_due_to_invalid_rx_enable; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed_due_to_octets_exceeded_enable14"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 67,
            "column" : 78,
            "source_fragment" : "= gate_closed_due_to_octets_exceeded_enable; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.streamFilter_c.none",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "IngressImpl.psfp_c.streamGate_c.set_gate_and_ipv",
      "id" : 13,
      "runtime_data" : [
        {
          "name" : "gate_state",
          "bitwidth" : 1
        },
        {
          "name" : "ipv",
          "bitwidth" : 4
        },
        {
          "name" : "interval_identifier",
          "bitwidth" : 12
        },
        {
          "name" : "max_octects_interval",
          "bitwidth" : 32
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_PSFPGateEnabled7"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 30,
            "column" : 52,
            "source_fragment" : "= gate_state; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_ipv6"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 31,
            "column" : 40,
            "source_fragment" : "= ipv; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_max_octects_interval8"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 32,
            "column" : 57,
            "source_fragment" : "= max_octects_interval; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_interval_identifier12"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 33,
            "column" : 56,
            "source_fragment" : "= interval_identifier; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 38,
            "column" : 47,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "psfp_c_streamGate_c_last_interval"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.state_reset_octets"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "state_reset_octets.read(last_interval, (bit<32>)meta.ingress_md.stream_filter.stream_gate_id)"
          }
        },
        {
          "op" : "_jump_if_zero",
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "if"
          },
          "parameters" : [
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "!=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "psfp_c_streamGate_c_last_interval"]
                      },
                      "right" : {
                        "type" : "local",
                        "value" : 2
                      }
                    }
                  }
                }
              }
            },
            {
              "type" : "hexstr",
              "value" : "0xb"
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 2
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 42,
            "column" : 38,
            "source_fragment" : "(bit<32>)interval_identifier"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.octets_per_interval"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 42,
            "column" : 12,
            "source_fragment" : "octets_per_interval.write((bit<32>)interval_identifier, max_octects_interval)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 43,
            "column" : 37,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.state_reset_octets"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 43,
            "column" : 12,
            "source_fragment" : "state_reset_octets.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, interval_identifier)"
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.drop_packet",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 25,
            "column" : 38,
            "source_fragment" : "= 1w1; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.drop_packet",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 25,
            "column" : 38,
            "source_fragment" : "= 1w1; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.drop_packet",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 25,
            "column" : 38,
            "source_fragment" : "= 1w1; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.set_color_direct",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "IngressImpl.psfp_c.flowMeter_c.set_flow_meter_config",
      "id" : 18,
      "runtime_data" : [
        {
          "name" : "dropOnYellow",
          "bitwidth" : 1
        },
        {
          "name" : "markAllFramesRedEnable",
          "bitwidth" : 1
        },
        {
          "name" : "colorAware",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_drop_on_yellow17"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 39,
            "column" : 50,
            "source_fragment" : "= dropOnYellow; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_mark_all_frames_red_enable19"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 40,
            "column" : 62,
            "source_fragment" : "= markAllFramesRedEnable; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color_aware20"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 41,
            "column" : 47,
            "source_fragment" : "= colorAware; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.ipv4_c.ipv4_forward",
      "id" : 19,
      "runtime_data" : [
        {
          "name" : "eth_dst_addr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 11,
            "column" : 8,
            "source_fragment" : "std_md.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "src_addr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 14,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.src_addr = hdr.ethernet.dst_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 15,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.dst_addr = eth_dst_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 18,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "IngressImpl.ipv4_c.drop",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        }
      ]
    },
    {
      "name" : "StreamFilter166",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 166,
            "column" : 24,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 168,
            "column" : 54,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 171,
            "column" : 60,
            "source_fragment" : "(bit<32>) meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamFilter_c.missed_max_sdu_filter_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 171,
            "column" : 24,
            "source_fragment" : "missed_max_sdu_filter_counter.count((bit<32>) meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamFilter162",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 162,
            "column" : 42,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamFilter_c.overall_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 162,
            "column" : 20,
            "source_fragment" : "overall_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamFilter156",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 156,
            "column" : 108,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame1"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamFilter_c.reg_filter_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 156,
            "column" : 16,
            "source_fragment" : "reg_filter_blocked.read(meta.ingress_md.stream_filter.stream_blocked_due_to_oversize_frame, (bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamFilter144",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 144,
            "column" : 45,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamFilter_c.reg_filter_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 144,
            "column" : 20,
            "source_fragment" : "reg_filter_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_handle, 1w1)"
          }
        }
      ]
    },
    {
      "name" : "StreamFilter148",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 148,
            "column" : 16,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 150,
            "column" : 46,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 152,
            "column" : 52,
            "source_fragment" : "(bit<32>) meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamFilter_c.missed_max_sdu_filter_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 152,
            "column" : 16,
            "source_fragment" : "missed_max_sdu_filter_counter.count((bit<32>) meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "PSFP99",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 99,
            "column" : 39,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.hyperperiod_done_reg"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 99,
            "column" : 12,
            "source_fragment" : "hyperperiod_done_reg.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._hyperperiod_pkt_count_hyperperiod31"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 102,
            "column" : 51,
            "source_fragment" : "= 0; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 103,
            "column" : 39,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.hyperperiod_done_reg"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 103,
            "column" : 12,
            "source_fragment" : "hyperperiod_done_reg.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._hyperperiod_hyperperiod_ts30"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._last_hyperperiod33"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "generate_digest",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 106,
            "column" : 12,
            "source_fragment" : "digest<digest_finished_hyperperiod_t>( (bit<32>)0, { // receiver=0 pour CP ..."
          }
        }
      ]
    },
    {
      "name" : "StreamGate89",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 89,
            "column" : 20,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 91,
            "column" : 50,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 92,
            "column" : 50,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.not_passed_gate_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 92,
            "column" : 20,
            "source_fragment" : "not_passed_gate_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate107",
      "id" : 28,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 107,
            "column" : 51,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.reg_gate_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 107,
            "column" : 28,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate98",
      "id" : 29,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 98,
            "column" : 24,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 100,
            "column" : 54,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 103,
            "column" : 54,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.missed_interval_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 103,
            "column" : 24,
            "source_fragment" : "missed_interval_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate115",
      "id" : 30,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "packet_length"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 115,
            "column" : 28,
            "source_fragment" : "remaining = remaining - std_md.packet_length"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_gate_interval_identifier12"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 116,
            "column" : 54,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_gate.interval_identifier"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.octets_per_interval"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 116,
            "column" : 28,
            "source_fragment" : "octets_per_interval.write((bit<32>)meta.ingress_md.stream_gate.interval_identifier, remaining)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_remaining_octets11"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 117,
            "column" : 73,
            "source_fragment" : "= remaining; ..."
          }
        }
      ]
    },
    {
      "name" : "StreamGate129",
      "id" : 31,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 129,
            "column" : 55,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.reg_gate_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 129,
            "column" : 32,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate120",
      "id" : 32,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 120,
            "column" : 28,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 122,
            "column" : 58,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 125,
            "column" : 58,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.not_passed_gate_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 125,
            "column" : 28,
            "source_fragment" : "not_passed_gate_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate113",
      "id" : 33,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_gate_interval_identifier12"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 113,
            "column" : 60,
            "source_fragment" : "(bit<32>) meta.ingress_md.stream_gate.interval_identifier"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.octets_per_interval"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 113,
            "column" : 24,
            "source_fragment" : "octets_per_interval.read(remaining, (bit<32>) meta.ingress_md.stream_gate.interval_identifier)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate85",
      "id" : 34,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 85,
            "column" : 79,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed15"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.reg_gate_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 85,
            "column" : 16,
            "source_fragment" : "reg_gate_blocked.read(meta.ingress_md.stream_gate.gate_closed, (bit<32>)meta.ingress_md.stream_filter.stream_gate_id)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate79",
      "id" : 35,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 79,
            "column" : 43,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.reg_gate_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 79,
            "column" : 20,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          }
        }
      ]
    },
    {
      "name" : "StreamGate68",
      "id" : 36,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 68,
            "column" : 16,
            "source_fragment" : "mark_to_drop(std_md)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 70,
            "column" : 46,
            "source_fragment" : "= 1w1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 73,
            "column" : 46,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_handle"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.streamGate_c.not_passed_gate_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 73,
            "column" : 16,
            "source_fragment" : "not_passed_gate_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          }
        }
      ]
    },
    {
      "name" : "PSFP117",
      "id" : 37,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_diff_ts22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "metadata_t._last_hyperperiod33"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 117,
            "column" : 36,
            "source_fragment" : "= (bit<64>)meta.ingress_ts - (bit<64>)meta.last_hyperperiod; ..."
          }
        }
      ]
    },
    {
      "name" : "FlowMeter72",
      "id" : 38,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_pre_color21"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/headers.p4",
            "line" : 143,
            "column" : 13,
            "source_fragment" : "1, // 01 ..."
          }
        }
      ]
    },
    {
      "name" : "FlowMeter75",
      "id" : 39,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_pre_color21"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "src/headers.p4",
            "line" : 142,
            "column" : 12,
            "source_fragment" : "0, // 00 ..."
          }
        }
      ]
    },
    {
      "name" : "FlowMeter89",
      "id" : 40,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 89,
            "column" : 49,
            "source_fragment" : "= 3; // Mark as red ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 91,
            "column" : 41,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.marked_red_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 91,
            "column" : 16,
            "source_fragment" : "marked_red_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter93",
      "id" : 41,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["eth_802_1q", "dei"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 93,
            "column" : 16,
            "source_fragment" : "hdr.eth_802_1q.dei = 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 94,
            "column" : 44,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.marked_yellow_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 94,
            "column" : 16,
            "source_fragment" : "marked_yellow_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter86",
      "id" : 42,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 86,
            "column" : 77,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_meter_blocked18"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.reg_meter_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 86,
            "column" : 12,
            "source_fragment" : "reg_meter_blocked.read(meta.ingress_md.flow_meter.meter_blocked, (bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter102",
      "id" : 43,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 102,
            "column" : 40,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.reg_meter_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 102,
            "column" : 16,
            "source_fragment" : "reg_meter_blocked.write((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id, 1w1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 109,
            "column" : 24,
            "source_fragment" : "std_md.egress_spec"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_30"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_gate_PSFPGateEnabled7"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            },
            {
              "type" : "hexstr",
              "value" : "0x06"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 111,
            "column" : 24,
            "source_fragment" : "6"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_32"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 23,
            "column" : 30,
            "source_fragment" : "meta"
          }
        },
        {
          "op" : "generate_digest",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x0000000c"
            },
            {
              "type" : "hexstr",
              "value" : "0x2"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 104,
            "column" : 16,
            "source_fragment" : "digest<digest_block_t>( ..."
          }
        }
      ]
    },
    {
      "name" : "FlowMeter100",
      "id" : 44,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 100,
            "column" : 37,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.marked_red_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 100,
            "column" : 12,
            "source_fragment" : "marked_red_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter123",
      "id" : 45,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 123,
            "column" : 49,
            "source_fragment" : "= 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 125,
            "column" : 41,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.marked_red_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 125,
            "column" : 16,
            "source_fragment" : "marked_red_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter127",
      "id" : 46,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["eth_802_1q", "dei"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 127,
            "column" : 16,
            "source_fragment" : "hdr.eth_802_1q.dei = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 128,
            "column" : 43,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.marked_green_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 128,
            "column" : 16,
            "source_fragment" : "marked_green_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "FlowMeter119",
      "id" : 47,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_37"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 119,
            "column" : 77,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_flow_meter_meter_blocked18"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.flowMeter_c.reg_meter_blocked"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_37"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 119,
            "column" : 12,
            "source_fragment" : "reg_meter_blocked.read(meta.ingress_md.flow_meter.meter_blocked, (bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          }
        }
      ]
    },
    {
      "name" : "PSFP85",
      "id" : 48,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_ts35"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 85,
            "column" : 24,
            "source_fragment" : "= std_md.ingress_global_timestamp; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_38"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 88,
            "column" : 71,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._hyperperiod_hyperperiod_ts30"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.hyperperiod_duration_reg"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_38"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 88,
            "column" : 8,
            "source_fragment" : "hyperperiod_duration_reg.read(meta.hyperperiod.hyperperiod_ts, (bit<32>)meta.ingress_md.stream_filter.stream_gate_id)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_39"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 91,
            "column" : 57,
            "source_fragment" : "(bit<32>)meta.ingress_md.stream_filter.stream_gate_id"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._last_hyperperiod33"]
            },
            {
              "type" : "register_array",
              "value" : "IngressImpl.psfp_c.last_hyperperiod_reg"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_39"]
            }
          ],
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 91,
            "column" : 8,
            "source_fragment" : "last_hyperperiod_reg.read(meta.last_hyperperiod, (bit<32>)meta.ingress_md.stream_filter.stream_gate_id)"
          }
        }
      ]
    },
    {
      "name" : "ingress19",
      "id" : 49,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 19,
            "column" : 8,
            "source_fragment" : "meta.ingress_md.to_be_dropped = 1w0"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "src/ingress.p4",
        "line" : 6,
        "column" : 8,
        "source_fragment" : "IngressImpl"
      },
      "init_table" : "tbl_ingress19",
      "tables" : [
        {
          "name" : "tbl_ingress19",
          "id" : 0,
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 19,
            "column" : 38,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [49],
          "actions" : ["ingress19"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "ingress19" : "node_3"
          },
          "default_entry" : {
            "action_id" : 49,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.streamFilter_c.stream_id",
          "id" : 1,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 78,
            "column" : 10,
            "source_fragment" : "stream_id"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.dst_addr",
              "target" : ["ethernet", "dst_addr"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.eth_802_1q.vid",
              "target" : ["eth_802_1q", "vid"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 5,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10, 1],
          "actions" : ["IngressImpl.psfp_c.streamFilter_c.assign_stream_handle", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "IngressImpl.psfp_c.streamFilter_c.max_sdu_filter",
            "__MISS__" : "IngressImpl.psfp_c.hyperperiod_state"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "IngressImpl.psfp_c.streamFilter_c.max_sdu_filter",
          "id" : 2,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 122,
            "column" : 10,
            "source_fragment" : "max_sdu_filter"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.stream_handle",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.eth_802_1q.pcp",
              "target" : ["eth_802_1q", "pcp"],
              "mask" : null
            },
            {
              "match_type" : "range",
              "name" : "std_md.packet_length",
              "target" : ["standard_metadata", "packet_length"],
              "mask" : null
            }
          ],
          "match_type" : "range",
          "type" : "simple",
          "max_size" : 512,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12, 4],
          "actions" : ["IngressImpl.psfp_c.streamFilter_c.none", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "tbl_StreamFilter156",
            "__MISS__" : "node_13"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_StreamFilter156",
          "id" : 3,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 156,
            "column" : 16,
            "source_fragment" : "reg_filter_blocked.read(meta.ingress_md.stream_filter.stream_blocked_due_to_oversize_frame, (bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["StreamFilter156"],
          "base_default_next" : "IngressImpl.psfp_c.streamFilter_c.stream_filter_instance",
          "next_tables" : {
            "StreamFilter156" : "IngressImpl.psfp_c.streamFilter_c.stream_filter_instance"
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.streamFilter_c.stream_filter_instance",
          "id" : 4,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 107,
            "column" : 10,
            "source_fragment" : "stream_filter_instance"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.stream_handle",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 5,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11, 3],
          "actions" : ["IngressImpl.psfp_c.streamFilter_c.assign_gate_and_meter", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "tbl_StreamFilter162",
            "__MISS__" : "IngressImpl.psfp_c.hyperperiod_state"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_StreamFilter162",
          "id" : 5,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 162,
            "column" : 20,
            "source_fragment" : "overall_counter.count((bit<32>)meta.ingress_md.stream_filter.stream_handle)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["StreamFilter162"],
          "base_default_next" : "node_9",
          "next_tables" : {
            "StreamFilter162" : "node_9"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamFilter166",
          "id" : 6,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 166,
            "column" : 24,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["StreamFilter166"],
          "base_default_next" : "IngressImpl.psfp_c.hyperperiod_state",
          "next_tables" : {
            "StreamFilter166" : "IngressImpl.psfp_c.hyperperiod_state"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.streamFilter_c.stream_id_active",
          "id" : 7,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 93,
            "column" : 10,
            "source_fragment" : "stream_id_active"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.stream_handle",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_handle0"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 256,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 2],
          "actions" : ["IngressImpl.psfp_c.streamFilter_c.overwrite_stream_active", "NoAction"],
          "base_default_next" : "IngressImpl.psfp_c.hyperperiod_state",
          "next_tables" : {
            "IngressImpl.psfp_c.streamFilter_c.overwrite_stream_active" : "IngressImpl.psfp_c.hyperperiod_state",
            "NoAction" : "IngressImpl.psfp_c.hyperperiod_state"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_StreamFilter144",
          "id" : 8,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 144,
            "column" : 20,
            "source_fragment" : "reg_filter_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_handle, 1w1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["StreamFilter144"],
          "base_default_next" : "tbl_StreamFilter148",
          "next_tables" : {
            "StreamFilter144" : "tbl_StreamFilter148"
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamFilter148",
          "id" : 9,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 148,
            "column" : 16,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [25],
          "actions" : ["StreamFilter148"],
          "base_default_next" : "IngressImpl.psfp_c.hyperperiod_state",
          "next_tables" : {
            "StreamFilter148" : "IngressImpl.psfp_c.hyperperiod_state"
          },
          "default_entry" : {
            "action_id" : 25,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.hyperperiod_state",
          "id" : 10,
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 59,
            "column" : 10,
            "source_fragment" : "hyperperiod_state"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.stream_gate_id",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 5,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8, 0],
          "actions" : ["IngressImpl.psfp_c.set_hyperperiod_state", "NoAction"],
          "base_default_next" : "tbl_PSFP85",
          "next_tables" : {
            "IngressImpl.psfp_c.set_hyperperiod_state" : "tbl_PSFP85",
            "NoAction" : "tbl_PSFP85"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_PSFP85",
          "id" : 11,
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 85,
            "column" : 24,
            "source_fragment" : "= std_md.ingress_global_timestamp; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [48],
          "actions" : ["PSFP85"],
          "base_default_next" : "node_18",
          "next_tables" : {
            "PSFP85" : "node_18"
          },
          "default_entry" : {
            "action_id" : 48,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_PSFP99",
          "id" : 12,
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 99,
            "column" : 12,
            "source_fragment" : "hyperperiod_done_reg.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [26],
          "actions" : ["PSFP99"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "PSFP99" : "node_62"
          },
          "default_entry" : {
            "action_id" : 26,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_PSFP117",
          "id" : 13,
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 117,
            "column" : 36,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [37],
          "actions" : ["PSFP117"],
          "base_default_next" : "node_21",
          "next_tables" : {
            "PSFP117" : "node_21"
          },
          "default_entry" : {
            "action_id" : 37,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.streamGate_c.stream_gate_instance",
          "id" : 14,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 49,
            "column" : 10,
            "source_fragment" : "stream_gate_instance"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.stream_gate_id",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_gate_id4"],
              "mask" : null
            },
            {
              "match_type" : "range",
              "name" : "meta.ingress_md.diff_ts",
              "target" : ["scalars", "metadata_t._ingress_md_diff_ts22"],
              "mask" : null
            }
          ],
          "match_type" : "range",
          "type" : "simple",
          "max_size" : 256,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13, 5],
          "actions" : ["IngressImpl.psfp_c.streamGate_c.set_gate_and_ipv", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "tbl_StreamGate85",
            "__MISS__" : "tbl_StreamGate68"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_StreamGate85",
          "id" : 15,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 85,
            "column" : 16,
            "source_fragment" : "reg_gate_blocked.read(meta.ingress_md.stream_gate.gate_closed, (bit<32>)meta.ingress_md.stream_filter.stream_gate_id)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [34],
          "actions" : ["StreamGate85"],
          "base_default_next" : "node_24",
          "next_tables" : {
            "StreamGate85" : "node_24"
          },
          "default_entry" : {
            "action_id" : 34,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate89",
          "id" : 16,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 89,
            "column" : 20,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [27],
          "actions" : ["StreamGate89"],
          "base_default_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "next_tables" : {
            "StreamGate89" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
          },
          "default_entry" : {
            "action_id" : 27,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate98",
          "id" : 17,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 98,
            "column" : 24,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [29],
          "actions" : ["StreamGate98"],
          "base_default_next" : "node_28",
          "next_tables" : {
            "StreamGate98" : "node_28"
          },
          "default_entry" : {
            "action_id" : 29,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate107",
          "id" : 18,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 107,
            "column" : 28,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [28],
          "actions" : ["StreamGate107"],
          "base_default_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "next_tables" : {
            "StreamGate107" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
          },
          "default_entry" : {
            "action_id" : 28,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate113",
          "id" : 19,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 113,
            "column" : 24,
            "source_fragment" : "octets_per_interval.read(remaining, (bit<32>) meta.ingress_md.stream_gate.interval_identifier)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [33],
          "actions" : ["StreamGate113"],
          "base_default_next" : "node_31",
          "next_tables" : {
            "StreamGate113" : "node_31"
          },
          "default_entry" : {
            "action_id" : 33,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate115",
          "id" : 20,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 115,
            "column" : 38,
            "source_fragment" : "= remaining - std_md.packet_length; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [30],
          "actions" : ["StreamGate115"],
          "base_default_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "next_tables" : {
            "StreamGate115" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
          },
          "default_entry" : {
            "action_id" : 30,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate120",
          "id" : 21,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 120,
            "column" : 28,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [32],
          "actions" : ["StreamGate120"],
          "base_default_next" : "node_34",
          "next_tables" : {
            "StreamGate120" : "node_34"
          },
          "default_entry" : {
            "action_id" : 32,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate129",
          "id" : 22,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 129,
            "column" : 32,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [31],
          "actions" : ["StreamGate129"],
          "base_default_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "next_tables" : {
            "StreamGate129" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
          },
          "default_entry" : {
            "action_id" : 31,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate68",
          "id" : 23,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 68,
            "column" : 16,
            "source_fragment" : "mark_to_drop(std_md); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [36],
          "actions" : ["StreamGate68"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "StreamGate68" : "node_37"
          },
          "default_entry" : {
            "action_id" : 36,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_StreamGate79",
          "id" : 24,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 79,
            "column" : 20,
            "source_fragment" : "reg_gate_blocked.write((bit<32>)meta.ingress_md.stream_filter.stream_gate_id, 1w1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [35],
          "actions" : ["StreamGate79"],
          "base_default_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "next_tables" : {
            "StreamGate79" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
          },
          "default_entry" : {
            "action_id" : 35,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config",
          "id" : 25,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 44,
            "column" : 10,
            "source_fragment" : "flow_meter_config"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.flow_meter_instance_id",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 5,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18, 6],
          "actions" : ["IngressImpl.psfp_c.flowMeter_c.set_flow_meter_config", "NoAction"],
          "base_default_next" : "node_40",
          "next_tables" : {
            "IngressImpl.psfp_c.flowMeter_c.set_flow_meter_config" : "node_40",
            "NoAction" : "node_40"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_FlowMeter72",
          "id" : 26,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 72,
            "column" : 49,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [38],
          "actions" : ["FlowMeter72"],
          "base_default_next" : "node_43",
          "next_tables" : {
            "FlowMeter72" : "node_43"
          },
          "default_entry" : {
            "action_id" : 38,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter75",
          "id" : 27,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 75,
            "column" : 49,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [39],
          "actions" : ["FlowMeter75"],
          "base_default_next" : "node_43",
          "next_tables" : {
            "FlowMeter75" : "node_43"
          },
          "default_entry" : {
            "action_id" : 39,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_instance",
          "id" : 28,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 54,
            "column" : 10,
            "source_fragment" : "flow_meter_instance"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ingress_md.stream_filter.flow_meter_instance_id",
              "target" : ["scalars", "metadata_t._ingress_md_stream_filter_flow_meter_instance_id5"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 5,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : "IngressImpl.psfp_c.flowMeter_c.flow_meter",
          "action_ids" : [17, 7],
          "actions" : ["IngressImpl.psfp_c.flowMeter_c.set_color_direct", "NoAction"],
          "base_default_next" : "node_45",
          "next_tables" : {
            "IngressImpl.psfp_c.flowMeter_c.set_color_direct" : "node_45",
            "NoAction" : "node_45"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_FlowMeter86",
          "id" : 29,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 86,
            "column" : 12,
            "source_fragment" : "reg_meter_blocked.read(meta.ingress_md.flow_meter.meter_blocked, (bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [42],
          "actions" : ["FlowMeter86"],
          "base_default_next" : "node_47",
          "next_tables" : {
            "FlowMeter86" : "node_47"
          },
          "default_entry" : {
            "action_id" : 42,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_psfp_c_flowMeter_c_drop_packet",
          "id" : 30,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 88,
            "column" : 16,
            "source_fragment" : "drop_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["IngressImpl.psfp_c.flowMeter_c.drop_packet"],
          "base_default_next" : "tbl_FlowMeter89",
          "next_tables" : {
            "IngressImpl.psfp_c.flowMeter_c.drop_packet" : "tbl_FlowMeter89"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter89",
          "id" : 31,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 89,
            "column" : 49,
            "source_fragment" : "= 3; // Mark as red ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [40],
          "actions" : ["FlowMeter89"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "FlowMeter89" : "node_62"
          },
          "default_entry" : {
            "action_id" : 40,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter93",
          "id" : 32,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 93,
            "column" : 35,
            "source_fragment" : "= 1; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [41],
          "actions" : ["FlowMeter93"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "FlowMeter93" : "node_62"
          },
          "default_entry" : {
            "action_id" : 41,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_psfp_c_flowMeter_c_drop_packet_0",
          "id" : 33,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 98,
            "column" : 12,
            "source_fragment" : "drop_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["IngressImpl.psfp_c.flowMeter_c.drop_packet"],
          "base_default_next" : "tbl_FlowMeter100",
          "next_tables" : {
            "IngressImpl.psfp_c.flowMeter_c.drop_packet" : "tbl_FlowMeter100"
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter100",
          "id" : 34,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 100,
            "column" : 12,
            "source_fragment" : "marked_red_counter.count((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [44],
          "actions" : ["FlowMeter100"],
          "base_default_next" : "node_54",
          "next_tables" : {
            "FlowMeter100" : "node_54"
          },
          "default_entry" : {
            "action_id" : 44,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter102",
          "id" : 35,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 102,
            "column" : 16,
            "source_fragment" : "reg_meter_blocked.write((bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id, 1w1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [43],
          "actions" : ["FlowMeter102"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "FlowMeter102" : "node_62"
          },
          "default_entry" : {
            "action_id" : 43,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter119",
          "id" : 36,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 119,
            "column" : 12,
            "source_fragment" : "reg_meter_blocked.read(meta.ingress_md.flow_meter.meter_blocked, (bit<32>)meta.ingress_md.stream_filter.flow_meter_instance_id)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [47],
          "actions" : ["FlowMeter119"],
          "base_default_next" : "node_58",
          "next_tables" : {
            "FlowMeter119" : "node_58"
          },
          "default_entry" : {
            "action_id" : 47,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_psfp_c_flowMeter_c_drop_packet_1",
          "id" : 37,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 121,
            "column" : 16,
            "source_fragment" : "drop_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["IngressImpl.psfp_c.flowMeter_c.drop_packet"],
          "base_default_next" : "tbl_FlowMeter123",
          "next_tables" : {
            "IngressImpl.psfp_c.flowMeter_c.drop_packet" : "tbl_FlowMeter123"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter123",
          "id" : 38,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 123,
            "column" : 49,
            "source_fragment" : "= 3; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [45],
          "actions" : ["FlowMeter123"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "FlowMeter123" : "node_62"
          },
          "default_entry" : {
            "action_id" : 45,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_FlowMeter127",
          "id" : 39,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 127,
            "column" : 35,
            "source_fragment" : "= 0; // Mark as green again ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [46],
          "actions" : ["FlowMeter127"],
          "base_default_next" : "node_62",
          "next_tables" : {
            "FlowMeter127" : "node_62"
          },
          "default_entry" : {
            "action_id" : 46,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressImpl.ipv4_c.ipv4",
          "id" : 40,
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 26,
            "column" : 10,
            "source_fragment" : "ipv4"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19, 20],
          "actions" : ["IngressImpl.ipv4_c.ipv4_forward", "IngressImpl.ipv4_c.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "IngressImpl.ipv4_c.ipv4_forward" : null,
            "IngressImpl.ipv4_c.drop" : null
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 21,
            "column" : 12,
            "source_fragment" : "hdr.eth_802_1q.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["eth_802_1q", "$valid$"]
              }
            }
          },
          "true_next" : "IngressImpl.psfp_c.streamFilter_c.stream_id",
          "false_next" : "node_62"
        },
        {
          "name" : "node_9",
          "id" : 1,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 165,
            "column" : 24,
            "source_fragment" : "meta.ingress_md.stream_filter.stream_blocked_due_to_oversize_frame_enable == 1w1 && meta.ingress_md.stream_filter.stream_blocked_due_to_oversize_frame == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame_enable2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame1"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_StreamFilter166",
          "false_next" : "node_11"
        },
        {
          "name" : "node_11",
          "id" : 2,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 173,
            "column" : 31,
            "source_fragment" : "meta.ingress_md.stream_filter.active_stream_identification == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_filter_active_stream_identification3"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "IngressImpl.psfp_c.streamFilter_c.stream_id_active",
          "false_next" : "IngressImpl.psfp_c.hyperperiod_state"
        },
        {
          "name" : "node_13",
          "id" : 3,
          "source_info" : {
            "filename" : "src/controls/StreamFilter.p4",
            "line" : 142,
            "column" : 20,
            "source_fragment" : "meta.ingress_md.stream_filter.stream_blocked_due_to_oversize_frame_enable == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_filter_stream_blocked_due_to_oversize_frame_enable2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamFilter144",
          "false_next" : "tbl_StreamFilter148"
        },
        {
          "name" : "node_18",
          "id" : 4,
          "source_info" : {
            "filename" : "src/controls/PSFP.p4",
            "line" : 97,
            "column" : 12,
            "source_fragment" : "std_md.ingress_global_timestamp > (meta.last_hyperperiod + meta.hyperperiod.hyperperiod_ts)"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_global_timestamp"]
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata_t._last_hyperperiod33"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata_t._hyperperiod_hyperperiod_ts30"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_PSFP99",
          "false_next" : "tbl_PSFP117"
        },
        {
          "name" : "node_21",
          "id" : 5,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "meta.ingress_md.to_be_dropped != 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "IngressImpl.psfp_c.streamGate_c.stream_gate_instance",
          "false_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
        },
        {
          "name" : "node_24",
          "id" : 6,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 87,
            "column" : 20,
            "source_fragment" : "meta.ingress_md.stream_gate.gate_closed == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed15"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamGate89",
          "false_next" : "node_26"
        },
        {
          "name" : "node_26",
          "id" : 7,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 96,
            "column" : 24,
            "source_fragment" : "meta.ingress_md.stream_gate.PSFPGateEnabled == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_gate_PSFPGateEnabled7"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamGate98",
          "false_next" : "tbl_StreamGate113"
        },
        {
          "name" : "node_28",
          "id" : 8,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 106,
            "column" : 28,
            "source_fragment" : "meta.ingress_md.stream_gate.gate_closed_due_to_invalid_rx_enable == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed_due_to_invalid_rx_enable13"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamGate107",
          "false_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
        },
        {
          "name" : "node_31",
          "id" : 9,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 114,
            "column" : 28,
            "source_fragment" : "remaining >= std_md.packet_length"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "psfp_c_streamGate_c_remaining"]
              },
              "right" : {
                "type" : "field",
                "value" : ["standard_metadata", "packet_length"]
              }
            }
          },
          "true_next" : "tbl_StreamGate115",
          "false_next" : "tbl_StreamGate120"
        },
        {
          "name" : "node_34",
          "id" : 10,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 127,
            "column" : 32,
            "source_fragment" : "meta.ingress_md.stream_gate.gate_closed_due_to_octets_exceeded_enable == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed_due_to_octets_exceeded_enable14"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamGate129",
          "false_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
        },
        {
          "name" : "node_37",
          "id" : 11,
          "source_info" : {
            "filename" : "src/controls/StreamGate.p4",
            "line" : 76,
            "column" : 20,
            "source_fragment" : "meta.ingress_md.stream_gate.gate_closed_due_to_invalid_rx_enable == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_stream_gate_gate_closed_due_to_invalid_rx_enable13"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_StreamGate79",
          "false_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_config"
        },
        {
          "name" : "node_40",
          "id" : 12,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "meta.ingress_md.flow_meter.color_aware == 1 && hdr.eth_802_1q.dei == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color_aware20"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["eth_802_1q", "dei"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_FlowMeter72",
          "false_next" : "tbl_FlowMeter75"
        },
        {
          "name" : "node_43",
          "id" : 13,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 78,
            "column" : 12,
            "source_fragment" : "meta.ingress_md.to_be_dropped != 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "IngressImpl.psfp_c.flowMeter_c.flow_meter_instance",
          "false_next" : "node_45"
        },
        {
          "name" : "node_45",
          "id" : 14,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 84,
            "column" : 12,
            "source_fragment" : "meta.ingress_md.flow_meter.color == 1 || meta.ingress_md.flow_meter.color == 2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x02"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_FlowMeter86",
          "false_next" : "node_51"
        },
        {
          "name" : "node_47",
          "id" : 15,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 87,
            "column" : 16,
            "source_fragment" : "meta.ingress_md.flow_meter.drop_on_yellow == 1w1 || meta.ingress_md.flow_meter.meter_blocked == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_drop_on_yellow17"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_meter_blocked18"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_psfp_c_flowMeter_c_drop_packet",
          "false_next" : "tbl_FlowMeter93"
        },
        {
          "name" : "node_51",
          "id" : 16,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 96,
            "column" : 19,
            "source_fragment" : "meta.ingress_md.flow_meter.color == 3"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x03"
              }
            }
          },
          "true_next" : "tbl_psfp_c_flowMeter_c_drop_packet_0",
          "false_next" : "node_56"
        },
        {
          "name" : "node_54",
          "id" : 17,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 101,
            "column" : 16,
            "source_fragment" : "meta.ingress_md.flow_meter.mark_all_frames_red_enable == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_flow_meter_mark_all_frames_red_enable19"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_FlowMeter102",
          "false_next" : "node_62"
        },
        {
          "name" : "node_56",
          "id" : 18,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 117,
            "column" : 19,
            "source_fragment" : "meta.ingress_md.flow_meter.color == 0 && meta.ingress_md.to_be_dropped != 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_flow_meter_color16"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_FlowMeter119",
          "false_next" : "node_62"
        },
        {
          "name" : "node_58",
          "id" : 19,
          "source_info" : {
            "filename" : "src/controls/FlowMeter.p4",
            "line" : 120,
            "column" : 16,
            "source_fragment" : "meta.ingress_md.flow_meter.meter_blocked == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t._ingress_md_flow_meter_meter_blocked18"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_psfp_c_flowMeter_c_drop_packet_1",
          "false_next" : "tbl_FlowMeter127"
        },
        {
          "name" : "node_62",
          "id" : 20,
          "source_info" : {
            "filename" : "src/ingress.p4",
            "line" : 26,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid() && meta.ingress_md.to_be_dropped != 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t._ingress_md_to_be_dropped23"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_63"
        },
        {
          "name" : "node_63",
          "id" : 21,
          "source_info" : {
            "filename" : "src/controls/IPv4.p4",
            "line" : 40,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "IngressImpl.ipv4_c.ipv4"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "src/egress.p4",
        "line" : 1,
        "column" : 8,
        "source_fragment" : "EgressImpl"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "src/checksum.p4",
        "line" : 15,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdr_checksum"],
      "type" : "generic",
      "calculation" : "calc",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "sdn-psfp.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}